{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "contractAddress",
						"type": "address"
					}
				],
				"name": "ContractCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "_operation",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "Executed",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "operationType",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "execute",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Contract module which provides the ability to call arbitrary functions at any other smart contract and itself, including using `delegatecall`, as well creating contracts using `create` and `create2`. This is the basis for a smart contract based account system, but could also be used as a proxy account system. ERC 165 interface id: 0x44c028fe `execute` should only be callable by the owner of the contract set via ERC173.",
			"events": {
				"ContractCreated(address)": {
					"details": "Emitted when a contract is created."
				},
				"Executed(uint256,address,uint256,bytes)": {
					"details": "Emitted when a contract executed."
				}
			},
			"kind": "dev",
			"methods": {
				"execute(uint256,address,uint256,bytes)": {
					"details": "Executes any other smart contract. SHOULD only be callable by the owner of the contract set via ERC173. Requirements: - `operationType`, the operation to execute. So far defined is:     CALL = 0;     DELEGATECALL = 1;     CREATE2 = 2;     CREATE = 3; - `data` the call data that will be used with the contract at `to` Emits a {ContractCreated} event, when a contract is created under `operationType` 2 and 3."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/contracts/identity/ERC725/IERC725X.sol": "IERC725X"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/contracts/identity/ERC725/IERC725X.sol": {
			"keccak256": "0x923fb2e7b10ddd847baeb6a58f65012446a19df8d3b1b060991c6c8b60a32c4b",
			"license": "CC0-1.0",
			"urls": [
				"bzz-raw://2fffef0acf464557365fee3d155b47b73b8a854787a8d119c4739270322dd68e",
				"dweb:/ipfs/QmcCZ1e77duu7Na46aCYvVvEE2ag9EqsfQRX925845gaaa"
			]
		}
	},
	"version": 1
}